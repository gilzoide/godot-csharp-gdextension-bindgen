// This code was automatically generated by GDExtension C# Bindgen
using System;
using System.Diagnostics.CodeAnalysis;
using Godot;

namespace GDExtensionBindgen;

public class LuaLightUserdata : LuaObject
{
	public LuaLightUserdata() : base(NativeName)
	{
	}
	protected LuaLightUserdata(StringName @class) : base(@class)
	{
	}
	protected LuaLightUserdata(Variant variant) : base(variant)
	{
	}
	protected LuaLightUserdata([NotNull] RefCounted @object) : base(@object)
	{
	}

	public static implicit operator RefCounted(LuaLightUserdata self) => self?._object;
	public static implicit operator Variant(LuaLightUserdata self) => self?._object;
	public static explicit operator LuaLightUserdata(Variant variant) => variant.AsGodotObject() != null ? new(variant) : null;

	public new class PropertyName : LuaObject.PropertyName
	{

	}

	public new class MethodName : LuaObject.MethodName
	{

	}

	public new class SignalName : LuaObject.SignalName
	{

	}

	private static readonly StringName NativeName = "LuaLightUserdata";
}
